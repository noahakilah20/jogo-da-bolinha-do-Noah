<script>
let canvas = document.getElementById("gameCanvas");
let ctx = canvas.getContext("2d");
let playerName = "";

const overlay = document.getElementById("overlay");
const nameInput = document.getElementById("nameInput");
const startButton = document.getElementById("startButton");

startButton.addEventListener("click", () => {
  playerName = nameInput.value.trim();
  if (playerName === "") {
    alert("Por favor, digite seu nome ou ID.");
    return;
  }
  overlay.style.display = "none";
  startGame();
});

// Variáveis básicas para teste inicial do jogo
let ball = { x: 240, y: 320, dx: 2, dy: -2, radius: 8 };
let paddle = { x: 200, width: 80, height: 10 };
let rightPressed = false;
let leftPressed = false;

function drawBall() {
  ctx.beginPath();
  ctx.arc(ball.x, ball.y, ball.radius, 0, Math.PI * 2);
  ctx.fillStyle = "#fff";
  ctx.fill();
  ctx.closePath();
}

function drawPaddle() {
  ctx.fillStyle = "#0f0";
  ctx.fillRect(paddle.x, canvas.height - paddle.height - 10, paddle.width, paddle.height);
}

function updateGame() {
  ctx.clearRect(0, 0, canvas.width, canvas.height);
  drawBall();
  drawPaddle();

  // Movimento da bola
  ball.x += ball.dx;
  ball.y += ball.dy;

  // Rebote nas bordas
  if (ball.x + ball.radius > canvas.width || ball.x - ball.radius < 0) ball.dx = -ball.dx;
  if (ball.y - ball.radius < 0) ball.dy = -ball.dy;

  // Rebote na raquete
  if (
    ball.y + ball.radius > canvas.height - paddle.height - 10 &&
    ball.x > paddle.x && ball.x < paddle.x + paddle.width
  ) {
    ball.dy = -ball.dy;
  }

  // Game over (bola caiu)
  if (ball.y + ball.radius > canvas.height) {
    alert("Game Over!");
    document.location.reload();
  }

  requestAnimationFrame(updateGame);
}

function startGame() {
  document.addEventListener("mousemove", (e) => {
    const rect = canvas.getBoundingClientRect();
    paddle.x = e.clientX - rect.left - paddle.width / 2;
  });

  document.addEventListener("touchmove", (e) => {
    const rect = canvas.getBoundingClientRect();
    paddle.x = e.touches[0].clientX - rect.left - paddle.width / 2;
  }, { passive: true });

  updateGame();
}
</script>
